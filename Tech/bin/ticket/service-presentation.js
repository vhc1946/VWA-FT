
import {ServicePricing} from './service-pricing.js';
import { VHCform } from '../repo/tools/vhc-forms.js';
//arepair

//aservicepresentation(){}
var cfdom = {
  cont: 'wo-present-contract-cont',
  form: {
      cont: 'present-contract-opts',
      option: 'present-contract-opt',
      memappr: 'wo-contract-appr',
      desc: 'present-contract-opt-desc',
      qty: 'present-contract-opt-quantity',
      name: 'present-contract-name',
      month: 'present-contract-monthly',

      inputs: {
          sys: 'present-contract-addsys',
          comp: 'present-contract-addcomp',
          stdfltr: 'present-contract-addstdflt',
          spcfltr: 'present-contract-addspcflt',
          humpad: 'present-contract-addhumpad',
          timesave: 'present-contract-addtimesave'
      }
  }
}
var cfcontent = `
  <div class="${cfdom.cont}">
      <input class="${cfdom.form.name}" type="search" list="contract-name-list" placeholder="Select Plan Type"/>
      <div class="${cfdom.form.cont}">
          <div class="${cfdom.form.option}">
              <div class="${cfdom.form.desc}" id="monthly-tag">Monthly Plan</div>
              <input class="${cfdom.form.memappr}" type="checkbox" />
              <div class="${cfdom.form.month}">24</div>
          </div>

          <div class="${cfdom.form.option}">
              <div class="${cfdom.form.desc}">Additional System(s)</div>
              <input class="${cfdom.form.qty}" type="number" />
              <div class="${cfdom.form.inputs.sys}">21</div>
          </div>
          <div class="${cfdom.form.option}">
              <div class="${cfdom.form.desc}">Additional Component(s)</div>
              <input class="${cfdom.form.qty}" type="number" />
              <div class="${cfdom.form.inputs.comp}">12</div>
          </div>

          <div id="enhance-tag">Enhancements</div>

          <div class="${cfdom.form.option}">
              <div class="${cfdom.form.desc}">Standard Filters</div>
              <input class="${cfdom.form.qty}" type="number" />
              <div class="${cfdom.form.inputs.stdfltr}">5</div>
          </div>
          <div class="${cfdom.form.option}">
              <div class="${cfdom.form.desc}">Humidifier Service/Pad</div>
              <input class="${cfdom.form.qty}" type="number" />
              <div class="${cfdom.form.inputs.humpad}">5</div>
          </div>
          <div class="${cfdom.form.option}">
              <div class="${cfdom.form.desc}">Specialty Filters</div>
              <input class="${cfdom.form.qty}" type="number" />
              <div class="${cfdom.form.inputs.spcfltr}">12</div>
          </div>
          <div class="${cfdom.form.option}">
              <div class="${cfdom.form.desc}">Time Saver Disc.</div>
              <input class="${cfdom.form.qty}" type="number" />
              <div class="${cfdom.form.inputs.timesave}">-4</div>
          </div>
      </div>
  </div>
`;

export class ServicePresentation{
  constructor(cont,data,pricebook){
    this.cont = cont;
    this.cont.innerHTML=this.contents;
    this.data = data; //ticket data
    this.pricebook = new ServicePricing(pricebook); //ticket book
    this.conform = new VHCform(this.cont.getElementsByClassName(cfdom.cont)[0]);
    this.conform.setinputs(cfdom.form.inputs);

    this.conform = VHCform(conform.cont);
    this.conform.setinputs(this.dom.contract.form.inputs);
    this.conform.cont.addEventListener('change',(ele)=>{
      console.log(cfdom.form);
    });

    this.contract='PRE'
    this.SETpresent(data);
  }

  dom = {
    cont: 'present-full-cont',
    button:{
      open:'button-open-presentation'
    },

    head: 'present-header-cont',
    info:{
      name:'wo-info-name',
      street:'wo-info-street',
      unit:'wo-info-unit',
      city:'wo-info-city',
      phone:'wo-info-phone',
      desc:'wo-info-description',
      custcode:'wo-info-custcode',
      wonum:'wo-info-wonum'
    },

    //contract: cntrctform, //from vg-membership.js

    body: 'present-bottom-cont',

    memlevel:'wo-present-membership',
    systems: 'wo-present-systems',
    system: {   //Most of this is generated by JS
      cont: 'wo-present-system',
      id: 'wo-present-system-id',
      repairs: 'wo-present-system-repairs',
      specials:{
        diagnostic:'wo-present-repair-diagnostic'
      },
      repair: {
        unapproved:'wo-present-repair-unapproved',
        cont: 'wo-present-repair',
        num: 'present-repair-num',
        desc: 'present-repair-desc',
        invst: 'present-repair-price',
        savings: 'present-repair-savings',
        appr: 'present-repair-appr'
      }
    },
    invest: {
      savings: 'wo-present-savings-today',
      regprice: 'wo-present-regprice-today',
      memprice: 'wo-present-memprice-today',
      conmonth: 'wo-present-contract-monthly'
    },
    sig: 'wo-present-signature'
  }

  contents=`
  <div class="${this.dom.cont}">
        <div class="${this.dom.head}">
            <div class="wo-contact-cont">
                <img src="../bin/repo/assets/images/VogelLogo.png" id="header-logo" alt="VOGEL">
                <div class="${this.dom.info.name}">Client Name</div>
                <div class="${this.dom.info.street}">1234 Street Dr</div>
                <div class="${this.dom.info.unit}"></div>
                <div class="${this.dom.info.city}">Fenton, MO 63026</div>
                <div class="${this.dom.info.phone}">Phone Number</div>
                <div class="${this.dom.info.desc}">Description text</div>
                <div class="${this.dom.info.custcode}">CUSTCODE</div>
                <div class="${this.dom.info.wonum}">wonum</div>
            </div>
            ${cfcontent}
        </div>

        <div class="${this.dom.body}">
            <div id="wo-present-repair-cont">
                <div class="${this.dom.system.repair.cont}">
                    <div id="${this.dom.memlevel}">Premium</div>
                    <a href="https://www.vogelhvac.co/" target="_blank" id="membership-link">Sign Up for Your Membership!</a>
                </div>
                <div id="wo-present-headers">
                    <div>Services & Repairs</div>
                    <div>Regular</div>
                    <div>Member</div>
                    <div>Savings</div>
                    <div>Approval</div>
                </div>


                <div id="wo-present-repair-diagnostic" class="${this.dom.system.repair.cont}" style="display:none">

                    <div class="${this.dom.system.repair.desc}">Diagnostic</div>
                    <div class="${this.dom.system.repair.invst}"></div>
                    <div></div>
                    <div class="${this.dom.system.repair.savings}"></div>
                    <div>YES</div>
                </div>

                <div id="wo-present-systems">
                </div>
            <div class="${this.dom.system.repair.cont}">
                <div>Savings Today</div>
                <div>0</div>
                <div id="${this.dom.invest.savings}"></div>
            </div>
            <div class="${this.dom.system.repair.cont}">
                <div>Monthly Membership</div>
                <div id="${this.dom.invest.conmonth}"></div>
            </div>
            <div class="${this.dom.system.repair.cont}">
                <div>Due Today</div>
                <div id="${this.dom.invest.regprice}"></div>
                <div id="${this.dom.invest.memprice}"></div>
            </div>
            </div>
            <div class="${this.dom.sig}">
                <canvas class="signature-pad"></canvas>
                <div class="signature-buttons">
                  <div class="flat-action-button sig-clear">Clear</div>
                  <div class="flat-action-button sig-save">Save</div>
                </div>
            </div>
        </div>

    </div>
  `

  SETpresent = (wodata) => {
    console.log('To Present > ',wodata);
    if (wodata.sitems != null) {
      document.body.appendChild(this.cont);  // Creates presentation
      //document.getElementsByClassName(this.dom.head)[0].appendChild(document.createElement('div')).innerHTML = cfcontent; // Appends Contract Form within presentation

      let slist = document.getElementById(this.dom.systems);

      let rprice=0; //item reg price
      let mprice=0; //item member price

      let trprice=0; //total reg price
      let tmprice=0; //total member price
      let savings=0; //total savings

      slist.innerHTML = '';

      for (let x = 0; x < wodata.sitems.length; x++) {  // Sets each system
        if(wodata.repairs[x]!=undefined && wodata.repairs[x].length!==0){//only display if repairs
          let s = slist.appendChild(document.createElement('div'));
          s.classList.add(this.dom.system.cont);
          s.appendChild(document.createElement('div')).innerText = wodata.sitems[x].tagid;
          let rlist = s.appendChild(document.createElement('div'));
          rlist.classList.add(this.dom.system.repairs);
          console.log('Repairs',wodata.repairs);
          for (let y = 0; y < wodata.repairs[x].length; y++) {  // Sets each repair for given system
            rprice = 0;
            mprice = 0;
            //tell what column repcost goes to

            //find the memebership cost (if any)

            //fill the difference
            let r = rlist.appendChild(document.createElement('div'));

            r.classList.add(this.dom.system.repair.cont);
            r.appendChild(document.createElement('div')).innerText = wodata.repairs[x][y].descr;

            rprice = this.pricebook.GETbookprice(wodata.repairs[x][y].task);
            r.appendChild(document.createElement('div')).innerText =  rprice;
            trprice += (wodata.repairs[x][y].appr ? rprice : 0);

            if(wodata.repairs[x][y].task=='DIAG'){ //special case for diagnostic fee
              if(wodata.contract && Object.keys(wodata.contract).length!==0){
                mprice = this.pricebook.GETbookprice(wodata.repairs[x][y].task,this.contract);
              }else{mprice = this.pricebook.GETbookprice(wodata.repairs[x][y].task);}
            }else{mprice = this.pricebook.GETbookprice(wodata.repairs[x][y].task,this.contract);}

            r.appendChild(document.createElement('div')).innerText = mprice;
            tmprice += (wodata.repairs[x][y].appr ? mprice : 0);
            r.appendChild(document.createElement('div')).innerText = rprice - mprice;
            savings += (wodata.repairs[x][y].appr ? rprice - mprice :0);

            if(!wodata.repairs[x][y].appr){
              r.classList.add(this.dom.system.repair.unapproved);
            }
            r.appendChild(document.createElement('div')).innerText = wodata.repairs[x][y].appr ? 'YES':'NO';
          }
        }
      }
      //document.getElementById(this.dom.memlevel).innerText = this.rewardform.GETmemhead(document.getElementById(this.dom.contract.form.name).value) || this.wo.cntrct;
      document.getElementById(this.dom.invest.regprice).innerText = trprice;
      document.getElementById(this.dom.invest.memprice).innerText = tmprice;
      document.getElementById(this.dom.invest.savings).innerText = savings;
      //document.getElementById(this.dom.invest.conmonth).innerText = this.rewardform.GETformprice();
    }


  }
}
